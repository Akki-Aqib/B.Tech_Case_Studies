 Case Study Question: OOPs – Bank Management System in Java
Q: Design and implement a basic Banking System using Object-Oriented Programming in Java. The system should support account creation, deposit, withdrawal, and account details display. Use classes, constructors, encapsulation, and methods effectively. Simulate with sample accounts.


// BankManagementSystem.java
import java.util.Scanner;

class Account {
    private String name;
    private int accNumber;
    private double balance;

    // Constructor
    public Account(String name, int accNumber, double balance) {
        this.name = name;
        this.accNumber = accNumber;
        this.balance = balance;
    }

    // Deposit method
    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("₹" + amount + " deposited successfully.");
        } else {
            System.out.println("Invalid deposit amount.");
        }
    }

    // Withdraw method
    public void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            System.out.println("₹" + amount + " withdrawn successfully.");
        } else {
            System.out.println("Invalid or insufficient funds.");
        }
    }

    // Display account details
    public void displayDetails() {
        System.out.println("Account Holder: " + name);
        System.out.println("Account Number: " + accNumber);
        System.out.println("Balance: ₹" + balance);
    }

    public int getAccNumber() {
        return accNumber;
    }
}

public class BankManagementSystem {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Account acc = new Account("Aqib Jawed", 1001, 5000.0); // Sample account
        int choice;

        System.out.println("===== Bank Management System =====");

        do {
            System.out.println("\n1. Display Account Details");
            System.out.println("2. Deposit");
            System.out.println("3. Withdraw");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            choice = sc.nextInt();

            switch (choice) {
                case 1:
                    acc.displayDetails();
                    break;
                case 2:
                    System.out.print("Enter deposit amount: ₹");
                    double dep = sc.nextDouble();
                    acc.deposit(dep);
                    break;
                case 3:
                    System.out.print("Enter withdrawal amount: ₹");
                    double wd = sc.nextDouble();
                    acc.withdraw(wd);
                    break;
                case 4:
                    System.out.println("Exiting... Thank you!");
                    break;
                default:
                    System.out.println("Invalid choice. Try again.");
            }

        } while (choice != 4);

        sc.close();
    }
}


